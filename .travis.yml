dist: bionic
language: go

services:
  - docker

go:
  - 1.12.x
  # - TODO 1.13.x
  # - TODO master

matrix:
  allow_failures:
    - go: master

cache:
  directories:
    - /home/travis/.cache/go-build
    # - /home/travis/gopath/pkg

before_cache:
  - go clean -testcache
  # - go clean -cache

env:
  global:
    - CODECOV_ENV=PROMETHEUS_IMAGE,GRAFANA_IMAGE,POSTGRES_IMAGE,PMM_SERVER_IMAGE

  matrix:
    # what we currently use in PMM
    # TODO replace "percona/pmm-server:2.0.0-rc3" with "percona/pmm-server:2.0.0" after 2.0.0 GA
    - PROMETHEUS_IMAGE=prom/prometheus:v2.12.0
      GRAFANA_IMAGE=grafana/grafana:6.3.5
      POSTGRES_IMAGE=postgres:11
      PMM_SERVER_IMAGE=percona/pmm-server:2.0.0-rc3

    # latest released version
    - PROMETHEUS_IMAGE=prom/prometheus:latest
      GRAFANA_IMAGE=grafana/grafana:latest
      POSTGRES_IMAGE=postgres:latest
      PMM_SERVER_IMAGE=percona/pmm-server:2

    # current master
    - PROMETHEUS_IMAGE=prom/prometheus:master
      GRAFANA_IMAGE=grafana/grafana:master
      POSTGRES_IMAGE=postgres:latest
      PMM_SERVER_IMAGE=perconalab/pmm-server:dev-latest

before_install:
  - docker-compose up -d
  - docker exec pmm-managed-server /root/go/src/github.com/percona/pmm-managed/.devcontainer/install-dev-tools.sh

install:
  # ensure that vendor/ is in sync with code and Gopkg.toml/lock
  - curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
  - dep check

before_script:
  # ensure that generated files are not changed
  - make init
  - make gen
  - make format
  - git status
  - git diff --exit-code

script:
  - make devcontainer TARGET=test-race TEST_FLAGS='-timeout=150s -v' TEST_PACKAGES=./services/supervisord
  - make devcontainer TARGET=test-cover TEST_FLAGS='-timeout=150s -v' TEST_PACKAGES=./services/supervisord
  - make devcontainer TARGET=test-crosscover TEST_FLAGS='-timeout=150s -v' TEST_PACKAGES=./services/supervisord

  - mv cover.out devcontainer-cover.out
  - mv crosscover.out devcontainer-crosscover.out

  # for main_test.go
  - make install

  - make test-race
  - make test-cover
  - make test-crosscover

  - make check

after_success:
  - curl https://codecov.io/bash > codecov
  - chmod +x codecov
  - ./codecov -f devcontainer-cover.out -F devcontainer,cover -X fix
  - ./codecov -f devcontainer-crosscover.out -F devcontainer,crosscover -X fix
  - ./codecov -f cover.out -F normal,cover -X fix
  - ./codecov -f crosscover.out -F normal,crosscover -X fix

notifications:
  slack:
    on_success: change
    on_failure: always
    rooms:
      secure: QDKp28RJiVnst5gGKSKhVWvyIacYFLvl4eypPQoagrUm7VlQlGdmExH841OtURbqwNNsQoai2kP1XfxxSTPtTzmp6rMsBH4D4+cAfpqE2xgP/zQ1ctbA7B4hSAGu0FkAzyhiQb6HaGIeELaTiS5uTgwHn64BNgNtf8rC3mCIUanKlpAwPOejDOvldjkL3TzNkjnv9kujLQhiSSlldMownb0gNeSiH2HfYAZ9XT5wQj6rBEGI2Mk5xBzkEduLpHMe6r8Ocko3j3q3czrNrlrqgPiTzYIh+A1h6cSGu4xe6C3WmANVbHi/ieeM3YM+pT1ff5Mx0g75Kyi18zBCSWL4tBOeu+ciHPAPKFGx7sv5ivLNzoKJm/Fc3AsdkkAvSHErsrRCWdwemRveSdbNOkwDybNSso3ERRZ8YuWIP5rdKb8HIprVuMrvlrpjXi5p901Nabt7Pw4mgDBVJIIvZn8PJ4N/0T+RGO2bV38JlWIutLFHFcHcQ2QPZOiGPffxbtfmU7x7+J4QCHhA4ucYkwzxEb7UZcGpSxz3+zVoP25c480Z56KInkxIEi0LBEqw2s7MqsKpgho4KJIpCbciDhPN7MTm4aVeYjtJ0GgIbgKXuaLWMUMcYQ0yTHUHweGMHLSF/k7cdP8WSb4z1LtJqxKzye9IcejdacVPhdLzHaprW7w=
