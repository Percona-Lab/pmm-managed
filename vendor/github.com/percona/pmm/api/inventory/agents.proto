syntax = "proto3";

package inventory;

import "google/api/annotations.proto";

// PMMAgent represent pmm-agent Agent configuration.
message PMMAgent {
  // Unique Agent identifier.
  string id = 1;
  // Node identifier where Agent runs.
  string runs_on_node_id = 2;
  reserved 3; // disabled
  // Agent process status: running and connected to pmm-managed, or not.
  bool running = 4;
  reserved 5; // node_id, node_ids
  reserved 6; // service_id, service_ids
  reserved 7; // listen_port
}

// NodeExporter represents node_exporter Agent configuration.
message NodeExporter {
  // Unique Agent identifier.
  string id = 1;
  // Node identifier where Agent runs and for which insights are provided by that Agent.
  string runs_on_node_id = 2;
  // Agent desired status: enabled or disabled.
  bool disabled = 3;
  // Agent process status: running or not.
  bool running = 4;
  reserved 5; // node_id, node_ids
  reserved 6; // service_id, service_ids
  // HTTP listen port for exposing metrics.
  uint32 listen_port = 7;
}

// MySQLdExporter represents mysqld_exporter Agent configuration.
message MySQLdExporter {
  // Unique Agent identifier.
  string id = 1;
  // Node identifier where Agent runs.
  string runs_on_node_id = 2;
  // Agent desired status: enabled or disabled.
  bool disabled = 3;
  // Agent process status: running or not.
  bool running = 4;
  reserved 5; // node_id, node_ids
  // Service identifier for which insights are provided by that Agent.
  string service_id = 6;
  // HTTP listen port for exposing metrics.
  uint32 listen_port = 7;
  // MySQL username for extracting metrics.
  string username = 8;
  reserved 9; // password
}

message ListAgentsRequest {}

message ListAgentsResponse {
  repeated PMMAgent pmm_agent = 1;
  repeated NodeExporter node_exporter = 2;
  repeated MySQLdExporter mysqld_exporter = 3;
}

message GetAgentRequest {
  // Unique Agent identifier.
  string id = 1;
}

message GetAgentResponse {
  oneof agent {
    PMMAgent pmm_agent = 1;
    NodeExporter node_exporter = 2;
    MySQLdExporter mysqld_exporter = 3;
  }
}

message AddPMMAgentRequest {
  reserved 1; // id
  // Node identifier where Agent runs.
  string runs_on_node_id = 2;
  reserved 3; // disabled
  reserved 4; // running
  reserved 5; // node_id, node_ids
  reserved 6; // service_id, service_ids
  reserved 7; // listen_port
}

message AddPMMAgentResponse {
  PMMAgent pmm_agent = 1;
}

message AddNodeExporterRequest {
  reserved 1; // id
  // Node identifier where Agent runs and for which insights are provided by that Agent.
  string runs_on_node_id = 2;
  // Agent desired status: enabled or disabled.
  bool disabled = 3;
  reserved 4; // node_id, node_ids
  reserved 5; // service_id, service_ids
  reserved 6; // running
  reserved 7; // listen_port
}

message AddNodeExporterResponse {
  NodeExporter node_exporter = 1;
}

message AddMySQLdExporterRequest {
  reserved 1; // id
  // Node identifier where Agent runs.
  string runs_on_node_id = 2;
  // Agent desired status: enabled or disabled.
  bool disabled = 3;
  reserved 4; // node_id, node_ids
  // Service identifier for which insights are provided by that Agent.
  string service_id = 5;
  reserved 6; // running
  reserved 7; // listen_port
  // MySQL username for extracting metrics.
  string username = 8;
  // MySQL password for extracting metrics.
  string password = 9;
}

message AddMySQLdExporterResponse {
  MySQLdExporter mysqld_exporter = 1;
}

message EnableAgentRequest {
  // Unique Agent identifier.
  string id = 1;
}

message EnableAgentResponse {}

message DisableAgentRequest {
  // Unique Agent identifier.
  string id = 1;
}

message DisableAgentResponse {}

message RemoveAgentRequest {
  string id = 1;
}

message RemoveAgentResponse {}

// Agents service provides public methods for managing Agents.
service Agents {
  // ListAgents returns a list of all Agents.
  rpc ListAgents(ListAgentsRequest) returns (ListAgentsResponse) {
    option (google.api.http) = {
      post: "/v0/inventory/Agents/List"
      body: "*"
    };
  }
  // GetAgent returns a single Agent by ID.
  rpc GetAgent(GetAgentRequest) returns (GetAgentResponse) {
    option (google.api.http) = {
      post: "/v0/inventory/Agents/Get"
      body: "*"
    };
  }
  // AddPMMAgent adds pmm-agent Agent.
  rpc AddPMMAgent(AddPMMAgentRequest) returns (AddPMMAgentResponse) {
    option (google.api.http) = {
      post: "/v0/inventory/Agents/AddPMMAgent"
      body: "*"
    };
  }
  // AddNodeExporter adds node_exporter Agent.
  rpc AddNodeExporter(AddNodeExporterRequest) returns (AddNodeExporterResponse) {
    option (google.api.http) = {
      post: "/v0/inventory/Agents/AddNodeExporter"
      body: "*"
    };
  }
  // AddMySQLdExporter adds mysqld_exporter Agent.
  rpc AddMySQLdExporter(AddMySQLdExporterRequest) returns (AddMySQLdExporterResponse) {
    option (google.api.http) = {
      post: "/v0/inventory/Agents/AddMySQLdExporter"
      body: "*"
    };
  }
  // EnableAgent enables and starts Agent.
  rpc EnableAgent(EnableAgentRequest) returns (EnableAgentResponse) {
    option (google.api.http) = {
      post: "/v0/inventory/Agents/Enable"
      body: "*"
    };
  }
  // DisableAgent disables and stops Agent.
  rpc DisableAgent(DisableAgentRequest) returns (DisableAgentResponse) {
    option (google.api.http) = {
      post: "/v0/inventory/Agents/Disable"
      body: "*"
    };
  }
  // RemoveAgent removes Agent.
  rpc RemoveAgent(RemoveAgentRequest) returns (RemoveAgentResponse) {
    option (google.api.http) = {
      post: "/v0/inventory/Agents/Remove"
      body: "*"
    };
  }
}
