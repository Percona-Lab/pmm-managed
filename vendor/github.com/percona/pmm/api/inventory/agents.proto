syntax = "proto3";

package inventory;

import "google/api/annotations.proto";

// TODO Do we need agent name?

// AgentProcessStatus represents agent process state.
enum AgentProcessStatus {
  AGENT_PROCESS_STATUS_INVALID = 0;
  DISABLED = 1;
  RUNNING = 2;
  // TODO adopt http://supervisord.org/subprocess.html#process-states ?

}

// NodeExporter represents node_exporter Agent configuration.
message NodeExporter {
  // Unique Agent identifier.
  uint32 id = 1;
  // Node identifier where Agent runs and for which insights are provided by that Agent.
  uint32 runs_on_node_id = 2;
  // Agent status: enabled or disabled.
  bool disabled = 3;
  reserved 4; // node_id, node_ids
  reserved 5; // service_id, service_ids
  // Agent process status.
  AgentProcessStatus process_status = 6;
  // HTTP listen port for exposing metrics.
  uint32 listen_port = 7;
}

// MySQLdExporter represents mysqld_exporter Agent configuration.
message MySQLdExporter {
  // Unique Agent identifier.
  uint32 id = 1;
  // Node identifier where Agent runs.
  uint32 runs_on_node_id = 2;
  // Agent status: enabled or disabled.
  bool disabled = 3;
  reserved 4; // node_id, node_ids
  // Service identifier for which insights are provided by that Agent.
  uint32 service_id = 5;
  // Agent process status.
  AgentProcessStatus process_status = 6;
  // HTTP listen port for exposing metrics.
  uint32 listen_port = 7;
  // MySQL username for extracting metrics.
  string username = 8;
  // MySQL password for extracting metrics.
  string password = 9;
}

message ListAgentsRequest {}

message ListAgentsResponse {
  repeated NodeExporter node_exporter = 1;
  repeated MySQLdExporter mysqld_exporter = 2;
}

message GetAgentRequest {
  // Unique Agent identifier.
  uint32 id = 1;
}

message GetAgentResponse {
  oneof agent {
    NodeExporter node_exporter = 1;
    MySQLdExporter mysqld_exporter = 2;
  }
}

message AddNodeExporterAgentRequest {
  reserved 1; // id
  // Node identifier where Agent runs and for which insights are provided by that Agent.
  uint32 runs_on_node_id = 2;
  // Agent status: enabled or disabled.
  bool disabled = 3;
  reserved 4; // node_id, node_ids
  reserved 5; // service_id, service_ids
  reserved 6; // process_status
  reserved 7; // listen_port
}

message AddNodeExporterAgentResponse {
  NodeExporter node_exporter = 1;
}

message AddMySQLdExporterAgentRequest {
  reserved 1; // id
  // Node identifier where Agent runs.
  uint32 runs_on_node_id = 2;
  // Agent status: enabled or disabled.
  bool disabled = 3;
  reserved 4; // node_id, node_ids
  // Service identifier for which insights are provided by that Agent.
  uint32 service_id = 5;
  reserved 6; // process_status
  reserved 7; // listen_port
  // MySQL username for extracting metrics.
  string username = 8;
  // MySQL password for extracting metrics.
  string password = 9;
}

message AddMySQLdExporterAgentResponse {
  MySQLdExporter mysqld_exporter = 1;
}

message EnableAgentRequest {
  // Unique Agent identifier.
  uint32 id = 1;
}

message EnableAgentResponse {}

message DisableAgentRequest {
  // Unique Agent identifier.
  uint32 id = 1;
}

message DisableAgentResponse {}

message RemoveAgentRequest {
  uint32 id = 1;
}

message RemoveAgentResponse {}

// Agents service provides public methods for managing Agents.
service Agents {
  // ListAgents returns a list of all Agents.
  rpc ListAgents(ListAgentsRequest) returns (ListAgentsResponse) {
    option (google.api.http) = {
      post: "/v0/inventory/Agents/ListAgents"
      body: "*"
    };
  }
  // GetAgent returns a single Agent by ID.
  rpc GetAgent(GetAgentRequest) returns (GetAgentResponse) {
    option (google.api.http) = {
      post: "/v0/inventory/Agents/GetAgent"
      body: "*"
    };
  }
  // AddNodeExporterAgent adds node_exporter Agent.
  rpc AddNodeExporterAgent(AddNodeExporterAgentRequest) returns (AddNodeExporterAgentResponse) {
    option (google.api.http) = {
      post: "/v0/inventory/Agents/AddNodeExporterAgent"
      body: "*"
    };
  }
  // AddMySQLdExporterAgent adds mysqld_exporter Agent.
  rpc AddMySQLdExporterAgent(AddMySQLdExporterAgentRequest) returns (AddMySQLdExporterAgentResponse) {
    option (google.api.http) = {
      post: "/v0/inventory/Agents/AddMySQLdExporterAgent"
      body: "*"
    };
  }
  // EnableAgent enabled and starts Agent.
  rpc EnableAgent(EnableAgentRequest) returns (EnableAgentResponse) {
    option (google.api.http) = {
      post: "/v0/inventory/Agents/EnableAgent"
      body: "*"
    };
  }
  // DisableAgent disables and stops Agent.
  rpc DisableAgent(DisableAgentRequest) returns (DisableAgentResponse) {
    option (google.api.http) = {
      post: "/v0/inventory/Agents/DisableAgent"
      body: "*"
    };
  }
  // RemoveAgent removes Agent.
  rpc RemoveAgent(RemoveAgentRequest) returns (RemoveAgentResponse) {
    option (google.api.http) = {
      post: "/v0/inventory/Agents/RemoveAgent"
      body: "*"
    };
  }
}
