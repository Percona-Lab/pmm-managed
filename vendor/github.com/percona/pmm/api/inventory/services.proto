syntax = "proto3";

package inventory;

import "google/api/annotations.proto";

// MySQLService represents MySQL-compatible Service configuration.
message MySQLService {
  // Unique Service identifier.
  uint32 id = 1;
  // Unique user-defined Service name.
  string name = 2;
  // Node identifier where this Service runs.
  uint32 node_id = 3;
  // MySQL access address (DNS name or IP address).
  string address = 4;
  // MySQL access port.
  uint32 port = 5;
  // MySQL access UNIX socket path.
  string unix_socket = 6;
  // MySQL version and engine. Arbitrary format.
  string version = 7;
}

message ListServicesRequest {}

message ListServicesResponse {
  repeated MySQLService mysql = 1;
}

message GetServiceRequest {
  // Unique Service identifier.
  uint32 id = 1;
}

message GetServiceResponse {
  oneof service {
    MySQLService mysql = 1;
  }
}

message AddMySQLServiceRequest {
  reserved 1; // id
  // Unique user-defined Service name.
  string name = 2;
  // Node identifier where this Service runs.
  uint32 node_id = 3;
  // MySQL access address (DNS name or IP address).
  string address = 4;
  // MySQL access port.
  uint32 port = 5;
  // MySQL access UNIX socket path.
  string unix_socket = 6;
  // MySQL version and engine. Arbitrary format.
  string version = 7;
}

message AddMySQLServiceResponse {
  MySQLService mysql = 1;
}

message RemoveServiceRequest {
  uint32 id = 1;
}

message RemoveServiceResponse {}

// Services service provides public methods for managing Services.
service Services {
  // ListServices returns a list of all Services.
  rpc ListServices(ListServicesRequest) returns (ListServicesResponse) {
    option (google.api.http) = {
      post: "/v0/inventory/Services/ListServices"
      body: "*"
    };
  }
  // GetService returns a single Service by ID.
  rpc GetService(GetServiceRequest) returns (GetServiceResponse) {
    option (google.api.http) = {
      post: "/v0/inventory/Services/GetService"
      body: "*"
    };
  }
  // AddMySQLService adds MySQL Service.
  rpc AddMySQLService(AddMySQLServiceRequest) returns (AddMySQLServiceResponse) {
    option (google.api.http) = {
      post: "/v0/inventory/Services/AddMySQLService"
      body: "*"
    };
  }
  // RemoveService removes Service without any Agents.
  rpc RemoveService(RemoveServiceRequest) returns (RemoveServiceResponse) {
    option (google.api.http) = {
      post: "/v0/inventory/Services/RemoveService"
      body: "*"
    };
  }
}
