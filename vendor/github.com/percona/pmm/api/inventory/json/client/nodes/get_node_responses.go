// Code generated by go-swagger; DO NOT EDIT.

package nodes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// GetNodeReader is a Reader for the GetNode structure.
type GetNodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetNodeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetNodeOK creates a GetNodeOK with default headers values
func NewGetNodeOK() *GetNodeOK {
	return &GetNodeOK{}
}

/*GetNodeOK handles this case with default header values.

(empty)
*/
type GetNodeOK struct {
	Payload *GetNodeOKBody
}

func (o *GetNodeOK) Error() string {
	return fmt.Sprintf("[POST /v0/inventory/Nodes/Get][%d] getNodeOK  %+v", 200, o.Payload)
}

func (o *GetNodeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetNodeOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetNodeBody get node body
swagger:model GetNodeBody
*/
type GetNodeBody struct {

	// Unique Node identifier.
	ID string `json:"id,omitempty"`
}

// Validate validates this get node body
func (o *GetNodeBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetNodeBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetNodeBody) UnmarshalBinary(b []byte) error {
	var res GetNodeBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetNodeOKBody get node o k body
swagger:model GetNodeOKBody
*/
type GetNodeOKBody struct {

	// amazon rds remote
	AmazonRDSRemote *GetNodeOKBodyAmazonRDSRemote `json:"amazon_rds_remote,omitempty"`

	// generic
	Generic *GetNodeOKBodyGeneric `json:"generic,omitempty"`

	// remote
	Remote *GetNodeOKBodyRemote `json:"remote,omitempty"`
}

// Validate validates this get node o k body
func (o *GetNodeOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAmazonRDSRemote(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateGeneric(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateRemote(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetNodeOKBody) validateAmazonRDSRemote(formats strfmt.Registry) error {

	if swag.IsZero(o.AmazonRDSRemote) { // not required
		return nil
	}

	if o.AmazonRDSRemote != nil {
		if err := o.AmazonRDSRemote.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getNodeOK" + "." + "amazon_rds_remote")
			}
			return err
		}
	}

	return nil
}

func (o *GetNodeOKBody) validateGeneric(formats strfmt.Registry) error {

	if swag.IsZero(o.Generic) { // not required
		return nil
	}

	if o.Generic != nil {
		if err := o.Generic.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getNodeOK" + "." + "generic")
			}
			return err
		}
	}

	return nil
}

func (o *GetNodeOKBody) validateRemote(formats strfmt.Registry) error {

	if swag.IsZero(o.Remote) { // not required
		return nil
	}

	if o.Remote != nil {
		if err := o.Remote.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getNodeOK" + "." + "remote")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetNodeOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetNodeOKBody) UnmarshalBinary(b []byte) error {
	var res GetNodeOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetNodeOKBodyAmazonRDSRemote AmazonRDSRemoteNode represents Amazon (AWS) RDS remote Node.
swagger:model GetNodeOKBodyAmazonRDSRemote
*/
type GetNodeOKBodyAmazonRDSRemote struct {

	// Hostname. Unique in combination with region.
	Hostname string `json:"hostname,omitempty"`

	// Unique Node identifier.
	ID string `json:"id,omitempty"`

	// Unique user-defined Node name.
	Name string `json:"name,omitempty"`

	// AWS region. Unique in combination with hostname.
	Region string `json:"region,omitempty"`
}

// Validate validates this get node o k body amazon RDS remote
func (o *GetNodeOKBodyAmazonRDSRemote) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetNodeOKBodyAmazonRDSRemote) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetNodeOKBodyAmazonRDSRemote) UnmarshalBinary(b []byte) error {
	var res GetNodeOKBodyAmazonRDSRemote
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetNodeOKBodyGeneric GenericNode represents Node without more specialized type.
swagger:model GetNodeOKBodyGeneric
*/
type GetNodeOKBodyGeneric struct {

	// Hostname. Is not unique. May be empty.
	Hostname string `json:"hostname,omitempty"`

	// Unique Node identifier.
	ID string `json:"id,omitempty"`

	// Unique user-defined Node name.
	Name string `json:"name,omitempty"`
}

// Validate validates this get node o k body generic
func (o *GetNodeOKBodyGeneric) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetNodeOKBodyGeneric) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetNodeOKBodyGeneric) UnmarshalBinary(b []byte) error {
	var res GetNodeOKBodyGeneric
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetNodeOKBodyRemote RemoteNode represents a generic remote Node.
// Agents can't be run on remote Nodes.
swagger:model GetNodeOKBodyRemote
*/
type GetNodeOKBodyRemote struct {

	// Unique Node identifier.
	ID string `json:"id,omitempty"`

	// Unique user-defined Node name.
	Name string `json:"name,omitempty"`
}

// Validate validates this get node o k body remote
func (o *GetNodeOKBodyRemote) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetNodeOKBodyRemote) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetNodeOKBodyRemote) UnmarshalBinary(b []byte) error {
	var res GetNodeOKBodyRemote
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
