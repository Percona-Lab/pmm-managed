// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// InventoryAddMySqldExporterAgentRequest inventory add my sqld exporter agent request
// swagger:model inventoryAddMySQLdExporterAgentRequest
type InventoryAddMySqldExporterAgentRequest struct {

	// Node identifiers for which insights are provided by that Agent.
	NodeIds []int64 `json:"node_ids"`

	// MySQL password for extracting metrics.
	Password string `json:"password,omitempty"`

	// Node identifier where Agent runs.
	RunsOnNodeID int64 `json:"runs_on_node_id,omitempty"`

	// Service identifiers for which insights are provided by that Agent.
	ServiceIds []int64 `json:"service_ids"`

	// MySQL username for extracting metrics.
	Username string `json:"username,omitempty"`
}

// Validate validates this inventory add my sqld exporter agent request
func (m *InventoryAddMySqldExporterAgentRequest) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *InventoryAddMySqldExporterAgentRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *InventoryAddMySqldExporterAgentRequest) UnmarshalBinary(b []byte) error {
	var res InventoryAddMySqldExporterAgentRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
