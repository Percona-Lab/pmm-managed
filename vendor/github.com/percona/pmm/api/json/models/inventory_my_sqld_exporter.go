// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// InventoryMySqldExporter MySQLdExporter represents mysqld_exporter Agent configuration.
// swagger:model inventoryMySQLdExporter
type InventoryMySqldExporter struct {

	// Unique Agent identifier.
	ID int64 `json:"id,omitempty"`

	// HTTP listen port for exposing metrics.
	ListenPort int64 `json:"listen_port,omitempty"`

	// Node identifiers for which insights are provided by that Agent.
	NodeIds []int64 `json:"node_ids"`

	// MySQL password for extracting metrics.
	Password string `json:"password,omitempty"`

	// Agent process status.
	ProcessStatus InventoryAgentProcessStatus `json:"process_status,omitempty"`

	// Node identifier where Agent runs.
	RunsOnNodeID int64 `json:"runs_on_node_id,omitempty"`

	// Service identifiers for which insights are provided by that Agent.
	ServiceIds []int64 `json:"service_ids"`

	// MySQL username for extracting metrics.
	Username string `json:"username,omitempty"`
}

// Validate validates this inventory my sqld exporter
func (m *InventoryMySqldExporter) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateProcessStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *InventoryMySqldExporter) validateProcessStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.ProcessStatus) { // not required
		return nil
	}

	if err := m.ProcessStatus.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("process_status")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *InventoryMySqldExporter) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *InventoryMySqldExporter) UnmarshalBinary(b []byte) error {
	var res InventoryMySqldExporter
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
