// Code generated by go-swagger; DO NOT EDIT.

package metrics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"
)

// GetMetricsByDigestReader is a Reader for the GetMetricsByDigest structure.
type GetMetricsByDigestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMetricsByDigestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetMetricsByDigestOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetMetricsByDigestOK creates a GetMetricsByDigestOK with default headers values
func NewGetMetricsByDigestOK() *GetMetricsByDigestOK {
	return &GetMetricsByDigestOK{}
}

/*GetMetricsByDigestOK handles this case with default header values.

A successful response.
*/
type GetMetricsByDigestOK struct {
	Payload *GetMetricsByDigestOKBody
}

func (o *GetMetricsByDigestOK) Error() string {
	return fmt.Sprintf("[POST /v1/qan/GetMetricsByDigest][%d] getMetricsByDigestOK  %+v", 200, o.Payload)
}

func (o *GetMetricsByDigestOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetMetricsByDigestOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetMetricsByDigestBody get metrics by digest body
swagger:model GetMetricsByDigestBody
*/
type GetMetricsByDigestBody struct {

	// digest
	Digest string `json:"digest,omitempty"`

	// from
	From string `json:"from,omitempty"`

	// include
	Include []string `json:"include"`

	// labels
	Labels []*LabelsItems0 `json:"labels"`

	// to
	To string `json:"to,omitempty"`
}

// Validate validates this get metrics by digest body
func (o *GetMetricsByDigestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLabels(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetMetricsByDigestBody) validateLabels(formats strfmt.Registry) error {

	if swag.IsZero(o.Labels) { // not required
		return nil
	}

	for i := 0; i < len(o.Labels); i++ {
		if swag.IsZero(o.Labels[i]) { // not required
			continue
		}

		if o.Labels[i] != nil {
			if err := o.Labels[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("body" + "." + "labels" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetMetricsByDigestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetMetricsByDigestBody) UnmarshalBinary(b []byte) error {
	var res GetMetricsByDigestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetMetricsByDigestOKBody get metrics by digest o k body
swagger:model GetMetricsByDigestOKBody
*/
type GetMetricsByDigestOKBody struct {

	// agent uuid
	AgentUUID string `json:"agent_uuid,omitempty"`

	// client hosts
	ClientHosts []string `json:"client_hosts"`

	// db schemas
	DbSchemas []string `json:"db_schemas"`

	// Dimension Group.
	DbServers []string `json:"db_servers"`

	// db usernames
	DbUsernames []string `json:"db_usernames"`

	// digest
	Digest string `json:"digest,omitempty"`

	// digest text
	DigestText string `json:"digest_text,omitempty"`

	// {code: count }
	Errors map[string]string `json:"errors,omitempty"`

	// example
	Example string `json:"example,omitempty"`

	// ExampleFormat is formant of query example: real or query without values
	// Enum: [METRICS_REPLY_EXAMPLE_FORMAT_INVALID EXAMPLE DIGEST]
	ExampleFormat *string `json:"example_format,omitempty"`

	// example metrics
	ExampleMetrics string `json:"example_metrics,omitempty"`

	// ExampleType is a type of query example selected for this query class in given period of time.
	// Enum: [METRICS_REPLY_EXAMPLE_TYPE_INVALID RANDOM SLOWEST FASTEST WITH_ERROR]
	ExampleType *string `json:"example_type,omitempty"`

	// first seen
	FirstSeen string `json:"first_seen,omitempty"`

	// grpint
	Grpint int64 `json:"grpint,omitempty"`

	// grpstr
	Grpstr string `json:"grpstr,omitempty"`

	// is truncated
	IsTruncated int64 `json:"is_truncated,omitempty"`

	// labels
	Labels map[string]string `json:"labels,omitempty"`

	// labint
	Labint map[string]int64 `json:"labint,omitempty"`

	// last seen
	LastSeen string `json:"last_seen,omitempty"`

	// m bytes sent cnt
	MBytesSentCnt string `json:"m_bytes_sent_cnt,omitempty"`

	// m bytes sent hg
	MBytesSentHg []string `json:"m_bytes_sent_hg"`

	// m bytes sent max
	MBytesSentMax string `json:"m_bytes_sent_max,omitempty"`

	// m bytes sent min
	MBytesSentMin string `json:"m_bytes_sent_min,omitempty"`

	// m bytes sent p99
	MBytesSentP99 string `json:"m_bytes_sent_p99,omitempty"`

	// m bytes sent sum
	MBytesSentSum string `json:"m_bytes_sent_sum,omitempty"`

	// m filesort on disk sum
	MFilesortOnDiskSum string `json:"m_filesort_on_disk_sum,omitempty"`

	// m filesort sum
	MFilesortSum string `json:"m_filesort_sum,omitempty"`

	// m full join sum
	MFullJoinSum string `json:"m_full_join_sum,omitempty"`

	// m full scan sum
	MFullScanSum string `json:"m_full_scan_sum,omitempty"`

	// m innodb io r bytes cnt
	MInnodbIoRBytesCnt string `json:"m_innodb_io_r_bytes_cnt,omitempty"`

	// m innodb io r bytes hg
	MInnodbIoRBytesHg []string `json:"m_innodb_io_r_bytes_hg"`

	// m innodb io r bytes max
	MInnodbIoRBytesMax string `json:"m_innodb_io_r_bytes_max,omitempty"`

	// m innodb io r bytes min
	MInnodbIoRBytesMin string `json:"m_innodb_io_r_bytes_min,omitempty"`

	// m innodb io r bytes p99
	MInnodbIoRBytesP99 string `json:"m_innodb_io_r_bytes_p99,omitempty"`

	// m innodb io r bytes sum
	MInnodbIoRBytesSum string `json:"m_innodb_io_r_bytes_sum,omitempty"`

	// m innodb io r ops cnt
	MInnodbIoROpsCnt string `json:"m_innodb_io_r_ops_cnt,omitempty"`

	// m innodb io r ops hg
	MInnodbIoROpsHg []string `json:"m_innodb_io_r_ops_hg"`

	// m innodb io r ops max
	MInnodbIoROpsMax string `json:"m_innodb_io_r_ops_max,omitempty"`

	// m innodb io r ops min
	MInnodbIoROpsMin string `json:"m_innodb_io_r_ops_min,omitempty"`

	// m innodb io r ops p99
	MInnodbIoROpsP99 string `json:"m_innodb_io_r_ops_p99,omitempty"`

	// m innodb io r ops sum
	MInnodbIoROpsSum string `json:"m_innodb_io_r_ops_sum,omitempty"`

	// m innodb io r wait cnt
	MInnodbIoRWaitCnt float32 `json:"m_innodb_io_r_wait_cnt,omitempty"`

	// m innodb io r wait hg
	MInnodbIoRWaitHg []float32 `json:"m_innodb_io_r_wait_hg"`

	// m innodb io r wait max
	MInnodbIoRWaitMax float32 `json:"m_innodb_io_r_wait_max,omitempty"`

	// m innodb io r wait min
	MInnodbIoRWaitMin float32 `json:"m_innodb_io_r_wait_min,omitempty"`

	// m innodb io r wait p99
	MInnodbIoRWaitP99 float32 `json:"m_innodb_io_r_wait_p99,omitempty"`

	// m innodb io r wait sum
	MInnodbIoRWaitSum float32 `json:"m_innodb_io_r_wait_sum,omitempty"`

	// m innodb pages distinct cnt
	MInnodbPagesDistinctCnt string `json:"m_innodb_pages_distinct_cnt,omitempty"`

	// m innodb pages distinct hg
	MInnodbPagesDistinctHg []string `json:"m_innodb_pages_distinct_hg"`

	// m innodb pages distinct max
	MInnodbPagesDistinctMax string `json:"m_innodb_pages_distinct_max,omitempty"`

	// m innodb pages distinct min
	MInnodbPagesDistinctMin string `json:"m_innodb_pages_distinct_min,omitempty"`

	// m innodb pages distinct p99
	MInnodbPagesDistinctP99 string `json:"m_innodb_pages_distinct_p99,omitempty"`

	// m innodb pages distinct sum
	MInnodbPagesDistinctSum string `json:"m_innodb_pages_distinct_sum,omitempty"`

	// m innodb queue wait cnt
	MInnodbQueueWaitCnt float32 `json:"m_innodb_queue_wait_cnt,omitempty"`

	// m innodb queue wait hg
	MInnodbQueueWaitHg []float32 `json:"m_innodb_queue_wait_hg"`

	// m innodb queue wait max
	MInnodbQueueWaitMax float32 `json:"m_innodb_queue_wait_max,omitempty"`

	// m innodb queue wait min
	MInnodbQueueWaitMin float32 `json:"m_innodb_queue_wait_min,omitempty"`

	// m innodb queue wait p99
	MInnodbQueueWaitP99 float32 `json:"m_innodb_queue_wait_p99,omitempty"`

	// m innodb queue wait sum
	MInnodbQueueWaitSum float32 `json:"m_innodb_queue_wait_sum,omitempty"`

	// m innodb rec lock wait cnt
	MInnodbRecLockWaitCnt float32 `json:"m_innodb_rec_lock_wait_cnt,omitempty"`

	// m innodb rec lock wait hg
	MInnodbRecLockWaitHg []float32 `json:"m_innodb_rec_lock_wait_hg"`

	// m innodb rec lock wait max
	MInnodbRecLockWaitMax float32 `json:"m_innodb_rec_lock_wait_max,omitempty"`

	// m innodb rec lock wait min
	MInnodbRecLockWaitMin float32 `json:"m_innodb_rec_lock_wait_min,omitempty"`

	// m innodb rec lock wait p99
	MInnodbRecLockWaitP99 float32 `json:"m_innodb_rec_lock_wait_p99,omitempty"`

	// m innodb rec lock wait sum
	MInnodbRecLockWaitSum float32 `json:"m_innodb_rec_lock_wait_sum,omitempty"`

	// m lock time cnt
	MLockTimeCnt int64 `json:"m_lock_time_cnt,omitempty"`

	// m lock time hg
	MLockTimeHg []float32 `json:"m_lock_time_hg"`

	// m lock time max
	MLockTimeMax float32 `json:"m_lock_time_max,omitempty"`

	// m lock time min
	MLockTimeMin float32 `json:"m_lock_time_min,omitempty"`

	// m lock time p99
	MLockTimeP99 float32 `json:"m_lock_time_p99,omitempty"`

	// m lock time sum
	MLockTimeSum float32 `json:"m_lock_time_sum,omitempty"`

	// m merge passes cnt
	MMergePassesCnt string `json:"m_merge_passes_cnt,omitempty"`

	// m merge passes hg
	MMergePassesHg []string `json:"m_merge_passes_hg"`

	// m merge passes max
	MMergePassesMax string `json:"m_merge_passes_max,omitempty"`

	// m merge passes min
	MMergePassesMin string `json:"m_merge_passes_min,omitempty"`

	// m merge passes p99
	MMergePassesP99 string `json:"m_merge_passes_p99,omitempty"`

	// m merge passes sum
	MMergePassesSum string `json:"m_merge_passes_sum,omitempty"`

	// m no good index used sum
	MNoGoodIndexUsedSum string `json:"m_no_good_index_used_sum,omitempty"`

	// m no index used sum
	MNoIndexUsedSum string `json:"m_no_index_used_sum,omitempty"`

	// m qc hit sum
	MQcHitSum string `json:"m_qc_hit_sum,omitempty"`

	// m query length cnt
	MQueryLengthCnt string `json:"m_query_length_cnt,omitempty"`

	// m query length hg
	MQueryLengthHg []string `json:"m_query_length_hg"`

	// m query length max
	MQueryLengthMax string `json:"m_query_length_max,omitempty"`

	// m query length min
	MQueryLengthMin string `json:"m_query_length_min,omitempty"`

	// m query length p99
	MQueryLengthP99 string `json:"m_query_length_p99,omitempty"`

	// m query length sum
	MQueryLengthSum string `json:"m_query_length_sum,omitempty"`

	// m query time cnt
	MQueryTimeCnt int64 `json:"m_query_time_cnt,omitempty"`

	// m query time hg
	MQueryTimeHg []int64 `json:"m_query_time_hg"`

	// m query time max
	MQueryTimeMax float32 `json:"m_query_time_max,omitempty"`

	// m query time min
	MQueryTimeMin float32 `json:"m_query_time_min,omitempty"`

	// m query time p99
	MQueryTimeP99 float32 `json:"m_query_time_p99,omitempty"`

	// m query time sum
	MQueryTimeSum float32 `json:"m_query_time_sum,omitempty"`

	// m rows affected cnt
	MRowsAffectedCnt string `json:"m_rows_affected_cnt,omitempty"`

	// m rows affected hg
	MRowsAffectedHg []string `json:"m_rows_affected_hg"`

	// m rows affected max
	MRowsAffectedMax string `json:"m_rows_affected_max,omitempty"`

	// m rows affected min
	MRowsAffectedMin string `json:"m_rows_affected_min,omitempty"`

	// m rows affected p99
	MRowsAffectedP99 string `json:"m_rows_affected_p99,omitempty"`

	// m rows affected sum
	MRowsAffectedSum string `json:"m_rows_affected_sum,omitempty"`

	// m rows examined cnt
	MRowsExaminedCnt string `json:"m_rows_examined_cnt,omitempty"`

	// m rows examined hg
	MRowsExaminedHg []string `json:"m_rows_examined_hg"`

	// m rows examined max
	MRowsExaminedMax string `json:"m_rows_examined_max,omitempty"`

	// m rows examined min
	MRowsExaminedMin string `json:"m_rows_examined_min,omitempty"`

	// m rows examined p99
	MRowsExaminedP99 string `json:"m_rows_examined_p99,omitempty"`

	// m rows examined sum
	MRowsExaminedSum string `json:"m_rows_examined_sum,omitempty"`

	// m rows read cnt
	MRowsReadCnt string `json:"m_rows_read_cnt,omitempty"`

	// m rows read hg
	MRowsReadHg []string `json:"m_rows_read_hg"`

	// m rows read max
	MRowsReadMax string `json:"m_rows_read_max,omitempty"`

	// m rows read min
	MRowsReadMin string `json:"m_rows_read_min,omitempty"`

	// m rows read p99
	MRowsReadP99 string `json:"m_rows_read_p99,omitempty"`

	// m rows read sum
	MRowsReadSum string `json:"m_rows_read_sum,omitempty"`

	// m rows sent cnt
	MRowsSentCnt string `json:"m_rows_sent_cnt,omitempty"`

	// m rows sent hg
	MRowsSentHg []string `json:"m_rows_sent_hg"`

	// m rows sent max
	MRowsSentMax string `json:"m_rows_sent_max,omitempty"`

	// m rows sent min
	MRowsSentMin string `json:"m_rows_sent_min,omitempty"`

	// m rows sent p99
	MRowsSentP99 string `json:"m_rows_sent_p99,omitempty"`

	// m rows sent sum
	MRowsSentSum string `json:"m_rows_sent_sum,omitempty"`

	// m select full range join sum
	MSelectFullRangeJoinSum string `json:"m_select_full_range_join_sum,omitempty"`

	// m select range check sum
	MSelectRangeCheckSum string `json:"m_select_range_check_sum,omitempty"`

	// m select range sum
	MSelectRangeSum string `json:"m_select_range_sum,omitempty"`

	// m sort range sum
	MSortRangeSum string `json:"m_sort_range_sum,omitempty"`

	// m sort rows sum
	MSortRowsSum string `json:"m_sort_rows_sum,omitempty"`

	// m sort scan sum
	MSortScanSum string `json:"m_sort_scan_sum,omitempty"`

	// m tmp disk tables cnt
	MTmpDiskTablesCnt string `json:"m_tmp_disk_tables_cnt,omitempty"`

	// m tmp disk tables hg
	MTmpDiskTablesHg []string `json:"m_tmp_disk_tables_hg"`

	// m tmp disk tables max
	MTmpDiskTablesMax string `json:"m_tmp_disk_tables_max,omitempty"`

	// m tmp disk tables min
	MTmpDiskTablesMin string `json:"m_tmp_disk_tables_min,omitempty"`

	// m tmp disk tables p99
	MTmpDiskTablesP99 string `json:"m_tmp_disk_tables_p99,omitempty"`

	// m tmp disk tables sum
	MTmpDiskTablesSum string `json:"m_tmp_disk_tables_sum,omitempty"`

	// m tmp table on disk sum
	MTmpTableOnDiskSum string `json:"m_tmp_table_on_disk_sum,omitempty"`

	// m tmp table sizes cnt
	MTmpTableSizesCnt string `json:"m_tmp_table_sizes_cnt,omitempty"`

	// m tmp table sizes hg
	MTmpTableSizesHg []string `json:"m_tmp_table_sizes_hg"`

	// m tmp table sizes max
	MTmpTableSizesMax string `json:"m_tmp_table_sizes_max,omitempty"`

	// m tmp table sizes min
	MTmpTableSizesMin string `json:"m_tmp_table_sizes_min,omitempty"`

	// m tmp table sizes p99
	MTmpTableSizesP99 string `json:"m_tmp_table_sizes_p99,omitempty"`

	// m tmp table sizes sum
	MTmpTableSizesSum string `json:"m_tmp_table_sizes_sum,omitempty"`

	// m tmp table sum
	MTmpTableSum string `json:"m_tmp_table_sum,omitempty"`

	// m tmp tables cnt
	MTmpTablesCnt string `json:"m_tmp_tables_cnt,omitempty"`

	// m tmp tables hg
	MTmpTablesHg []string `json:"m_tmp_tables_hg"`

	// m tmp tables max
	MTmpTablesMax string `json:"m_tmp_tables_max,omitempty"`

	// m tmp tables min
	MTmpTablesMin string `json:"m_tmp_tables_min,omitempty"`

	// m tmp tables p99
	MTmpTablesP99 string `json:"m_tmp_tables_p99,omitempty"`

	// m tmp tables sum
	MTmpTablesSum string `json:"m_tmp_tables_sum,omitempty"`

	// num queries
	NumQueries string `json:"num_queries,omitempty"`

	// num query with errors
	NumQueryWithErrors string `json:"num_query_with_errors,omitempty"`

	// Metrics.
	NumQueryWithWarnings string `json:"num_query_with_warnings,omitempty"`

	// period length
	PeriodLength int64 `json:"period_length,omitempty"`

	// period start
	PeriodStart string `json:"period_start,omitempty"`

	// {code: count }
	Warnings map[string]string `json:"warnings,omitempty"`
}

// Validate validates this get metrics by digest o k body
func (o *GetMetricsByDigestOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateExampleFormat(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateExampleType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var getMetricsByDigestOKBodyTypeExampleFormatPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["METRICS_REPLY_EXAMPLE_FORMAT_INVALID","EXAMPLE","DIGEST"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getMetricsByDigestOKBodyTypeExampleFormatPropEnum = append(getMetricsByDigestOKBodyTypeExampleFormatPropEnum, v)
	}
}

const (

	// GetMetricsByDigestOKBodyExampleFormatMETRICSREPLYEXAMPLEFORMATINVALID captures enum value "METRICS_REPLY_EXAMPLE_FORMAT_INVALID"
	GetMetricsByDigestOKBodyExampleFormatMETRICSREPLYEXAMPLEFORMATINVALID string = "METRICS_REPLY_EXAMPLE_FORMAT_INVALID"

	// GetMetricsByDigestOKBodyExampleFormatEXAMPLE captures enum value "EXAMPLE"
	GetMetricsByDigestOKBodyExampleFormatEXAMPLE string = "EXAMPLE"

	// GetMetricsByDigestOKBodyExampleFormatDIGEST captures enum value "DIGEST"
	GetMetricsByDigestOKBodyExampleFormatDIGEST string = "DIGEST"
)

// prop value enum
func (o *GetMetricsByDigestOKBody) validateExampleFormatEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, getMetricsByDigestOKBodyTypeExampleFormatPropEnum); err != nil {
		return err
	}
	return nil
}

func (o *GetMetricsByDigestOKBody) validateExampleFormat(formats strfmt.Registry) error {

	if swag.IsZero(o.ExampleFormat) { // not required
		return nil
	}

	// value enum
	if err := o.validateExampleFormatEnum("getMetricsByDigestOK"+"."+"example_format", "body", *o.ExampleFormat); err != nil {
		return err
	}

	return nil
}

var getMetricsByDigestOKBodyTypeExampleTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["METRICS_REPLY_EXAMPLE_TYPE_INVALID","RANDOM","SLOWEST","FASTEST","WITH_ERROR"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getMetricsByDigestOKBodyTypeExampleTypePropEnum = append(getMetricsByDigestOKBodyTypeExampleTypePropEnum, v)
	}
}

const (

	// GetMetricsByDigestOKBodyExampleTypeMETRICSREPLYEXAMPLETYPEINVALID captures enum value "METRICS_REPLY_EXAMPLE_TYPE_INVALID"
	GetMetricsByDigestOKBodyExampleTypeMETRICSREPLYEXAMPLETYPEINVALID string = "METRICS_REPLY_EXAMPLE_TYPE_INVALID"

	// GetMetricsByDigestOKBodyExampleTypeRANDOM captures enum value "RANDOM"
	GetMetricsByDigestOKBodyExampleTypeRANDOM string = "RANDOM"

	// GetMetricsByDigestOKBodyExampleTypeSLOWEST captures enum value "SLOWEST"
	GetMetricsByDigestOKBodyExampleTypeSLOWEST string = "SLOWEST"

	// GetMetricsByDigestOKBodyExampleTypeFASTEST captures enum value "FASTEST"
	GetMetricsByDigestOKBodyExampleTypeFASTEST string = "FASTEST"

	// GetMetricsByDigestOKBodyExampleTypeWITHERROR captures enum value "WITH_ERROR"
	GetMetricsByDigestOKBodyExampleTypeWITHERROR string = "WITH_ERROR"
)

// prop value enum
func (o *GetMetricsByDigestOKBody) validateExampleTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, getMetricsByDigestOKBodyTypeExampleTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (o *GetMetricsByDigestOKBody) validateExampleType(formats strfmt.Registry) error {

	if swag.IsZero(o.ExampleType) { // not required
		return nil
	}

	// value enum
	if err := o.validateExampleTypeEnum("getMetricsByDigestOK"+"."+"example_type", "body", *o.ExampleType); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetMetricsByDigestOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetMetricsByDigestOKBody) UnmarshalBinary(b []byte) error {
	var res GetMetricsByDigestOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*LabelsItems0 MapFieldEntry TODO.
swagger:model LabelsItems0
*/
type LabelsItems0 struct {

	// key
	Key string `json:"key,omitempty"`

	// value
	Value []string `json:"value"`
}

// Validate validates this labels items0
func (o *LabelsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LabelsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LabelsItems0) UnmarshalBinary(b []byte) error {
	var res LabelsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
