{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "title": "PMM Server Inventory API",
    "version": "version 0"
  },
  "paths": {
    "/v0/inventory/Agents/AddMySQLdExporter": {
      "post": {
        "tags": [
          "Agents"
        ],
        "summary": "AddMySQLdExporter adds mysqld_exporter Agent.",
        "operationId": "AddMySQLdExporter",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryAddMySQLdExporterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(empty)",
            "schema": {
              "$ref": "#/definitions/inventoryAddMySQLdExporterResponse"
            }
          }
        }
      }
    },
    "/v0/inventory/Agents/AddNodeExporter": {
      "post": {
        "tags": [
          "Agents"
        ],
        "summary": "AddNodeExporter adds node_exporter Agent.",
        "operationId": "AddNodeExporter",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryAddNodeExporterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(empty)",
            "schema": {
              "$ref": "#/definitions/inventoryAddNodeExporterResponse"
            }
          }
        }
      }
    },
    "/v0/inventory/Agents/AddPMMAgent": {
      "post": {
        "tags": [
          "Agents"
        ],
        "summary": "AddPMMAgent adds pmm-agent Agent.",
        "operationId": "AddPMMAgent",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryAddPMMAgentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(empty)",
            "schema": {
              "$ref": "#/definitions/inventoryAddPMMAgentResponse"
            }
          }
        }
      }
    },
    "/v0/inventory/Agents/Disable": {
      "post": {
        "tags": [
          "Agents"
        ],
        "summary": "DisableAgent disables and stops Agent.",
        "operationId": "DisableAgent",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryDisableAgentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(empty)",
            "schema": {
              "$ref": "#/definitions/inventoryDisableAgentResponse"
            }
          }
        }
      }
    },
    "/v0/inventory/Agents/Enable": {
      "post": {
        "tags": [
          "Agents"
        ],
        "summary": "EnableAgent enables and starts Agent.",
        "operationId": "EnableAgent",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryEnableAgentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(empty)",
            "schema": {
              "$ref": "#/definitions/inventoryEnableAgentResponse"
            }
          }
        }
      }
    },
    "/v0/inventory/Agents/Get": {
      "post": {
        "tags": [
          "Agents"
        ],
        "summary": "GetAgent returns a single Agent by ID.",
        "operationId": "GetAgent",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryGetAgentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(empty)",
            "schema": {
              "$ref": "#/definitions/inventoryGetAgentResponse"
            }
          }
        }
      }
    },
    "/v0/inventory/Agents/List": {
      "post": {
        "tags": [
          "Agents"
        ],
        "summary": "ListAgents returns a list of all Agents.",
        "operationId": "ListAgents",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryListAgentsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(empty)",
            "schema": {
              "$ref": "#/definitions/inventoryListAgentsResponse"
            }
          }
        }
      }
    },
    "/v0/inventory/Agents/Remove": {
      "post": {
        "tags": [
          "Agents"
        ],
        "summary": "RemoveAgent removes Agent.",
        "operationId": "RemoveAgent",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryRemoveAgentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(empty)",
            "schema": {
              "$ref": "#/definitions/inventoryRemoveAgentResponse"
            }
          }
        }
      }
    },
    "/v0/inventory/Nodes/AddAmazonRDSRemote": {
      "post": {
        "tags": [
          "Nodes"
        ],
        "summary": "AddAmazonRDSRemoteNode adds Amazon (AWS) RDS remote Node.",
        "operationId": "AddAmazonRDSRemoteNode",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryAddAmazonRDSRemoteNodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(empty)",
            "schema": {
              "$ref": "#/definitions/inventoryAddAmazonRDSRemoteNodeResponse"
            }
          }
        }
      }
    },
    "/v0/inventory/Nodes/AddGeneric": {
      "post": {
        "tags": [
          "Nodes"
        ],
        "summary": "AddGenericNode adds generic Node.",
        "operationId": "AddGenericNode",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryAddGenericNodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(empty)",
            "schema": {
              "$ref": "#/definitions/inventoryAddGenericNodeResponse"
            }
          }
        }
      }
    },
    "/v0/inventory/Nodes/AddRemote": {
      "post": {
        "tags": [
          "Nodes"
        ],
        "summary": "AddRemoteNode adds remote Node.",
        "operationId": "AddRemoteNode",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryAddRemoteNodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(empty)",
            "schema": {
              "$ref": "#/definitions/inventoryAddRemoteNodeResponse"
            }
          }
        }
      }
    },
    "/v0/inventory/Nodes/ChangeAmazonRDSRemote": {
      "post": {
        "tags": [
          "Nodes"
        ],
        "summary": "ChangeAmazonRDSRemoteNode changes Amazon (AWS) RDS remote Node.",
        "operationId": "ChangeAmazonRDSRemoteNode",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryChangeAmazonRDSRemoteNodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(empty)",
            "schema": {
              "$ref": "#/definitions/inventoryChangeAmazonRDSRemoteNodeResponse"
            }
          }
        }
      }
    },
    "/v0/inventory/Nodes/ChangeGeneric": {
      "post": {
        "tags": [
          "Nodes"
        ],
        "summary": "ChangeGenericNode changes generic Node.",
        "operationId": "ChangeGenericNode",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryChangeGenericNodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(empty)",
            "schema": {
              "$ref": "#/definitions/inventoryChangeGenericNodeResponse"
            }
          }
        }
      }
    },
    "/v0/inventory/Nodes/ChangeRemote": {
      "post": {
        "tags": [
          "Nodes"
        ],
        "summary": "ChangeRemoteNode changes remote Node.",
        "operationId": "ChangeRemoteNode",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryChangeRemoteNodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(empty)",
            "schema": {
              "$ref": "#/definitions/inventoryChangeRemoteNodeResponse"
            }
          }
        }
      }
    },
    "/v0/inventory/Nodes/Get": {
      "post": {
        "tags": [
          "Nodes"
        ],
        "summary": "GetNode returns a single Node by ID.",
        "operationId": "GetNode",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryGetNodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(empty)",
            "schema": {
              "$ref": "#/definitions/inventoryGetNodeResponse"
            }
          }
        }
      }
    },
    "/v0/inventory/Nodes/List": {
      "post": {
        "tags": [
          "Nodes"
        ],
        "summary": "ListNodes returns a list of all Nodes.",
        "operationId": "ListNodes",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryListNodesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(empty)",
            "schema": {
              "$ref": "#/definitions/inventoryListNodesResponse"
            }
          }
        }
      }
    },
    "/v0/inventory/Nodes/Remove": {
      "post": {
        "tags": [
          "Nodes"
        ],
        "summary": "RemoveNode removes Node without any Agents and Services.",
        "operationId": "RemoveNode",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryRemoveNodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(empty)",
            "schema": {
              "$ref": "#/definitions/inventoryRemoveNodeResponse"
            }
          }
        }
      }
    },
    "/v0/inventory/Services/AddMySQL": {
      "post": {
        "tags": [
          "Services"
        ],
        "summary": "AddMySQLService adds MySQL Service.",
        "operationId": "AddMySQLService",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryAddMySQLServiceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(empty)",
            "schema": {
              "$ref": "#/definitions/inventoryAddMySQLServiceResponse"
            }
          }
        }
      }
    },
    "/v0/inventory/Services/ChangeMySQL": {
      "post": {
        "tags": [
          "Services"
        ],
        "summary": "ChangeMySQLService changes MySQL Service.",
        "operationId": "ChangeMySQLService",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryChangeMySQLServiceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(empty)",
            "schema": {
              "$ref": "#/definitions/inventoryChangeMySQLServiceResponse"
            }
          }
        }
      }
    },
    "/v0/inventory/Services/Get": {
      "post": {
        "tags": [
          "Services"
        ],
        "summary": "GetService returns a single Service by ID.",
        "operationId": "GetService",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryGetServiceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(empty)",
            "schema": {
              "$ref": "#/definitions/inventoryGetServiceResponse"
            }
          }
        }
      }
    },
    "/v0/inventory/Services/List": {
      "post": {
        "tags": [
          "Services"
        ],
        "summary": "ListServices returns a list of all Services.",
        "operationId": "ListServices",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryListServicesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(empty)",
            "schema": {
              "$ref": "#/definitions/inventoryListServicesResponse"
            }
          }
        }
      }
    },
    "/v0/inventory/Services/Remove": {
      "post": {
        "tags": [
          "Services"
        ],
        "summary": "RemoveService removes Service without any Agents.",
        "operationId": "RemoveService",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryRemoveServiceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(empty)",
            "schema": {
              "$ref": "#/definitions/inventoryRemoveServiceResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "inventoryAddAmazonRDSRemoteNodeRequest": {
      "type": "object",
      "properties": {
        "hostname": {
          "description": "Hostname. Unique in combination with region.",
          "type": "string"
        },
        "id": {
          "description": "Unique Node identifier. Will be generated if empty.",
          "type": "string"
        },
        "name": {
          "description": "Unique user-defined Node name.",
          "type": "string"
        },
        "region": {
          "description": "AWS region. Unique in combination with hostname.",
          "type": "string"
        }
      }
    },
    "inventoryAddAmazonRDSRemoteNodeResponse": {
      "type": "object",
      "properties": {
        "amazon_rds_remote": {
          "$ref": "#/definitions/inventoryAmazonRDSRemoteNode"
        }
      }
    },
    "inventoryAddGenericNodeRequest": {
      "type": "object",
      "properties": {
        "hostname": {
          "description": "Hostname. Is not unique. May be empty.",
          "type": "string"
        },
        "id": {
          "description": "Unique Node identifier. Will be generated if empty.",
          "type": "string"
        },
        "name": {
          "description": "Unique user-defined Node name.",
          "type": "string"
        }
      }
    },
    "inventoryAddGenericNodeResponse": {
      "type": "object",
      "properties": {
        "generic": {
          "$ref": "#/definitions/inventoryGenericNode"
        }
      }
    },
    "inventoryAddMySQLServiceRequest": {
      "type": "object",
      "properties": {
        "address": {
          "description": "MySQL access address (DNS name or IP address).",
          "type": "string"
        },
        "name": {
          "description": "Unique user-defined Service name.",
          "type": "string"
        },
        "node_id": {
          "description": "Node identifier where this Service runs.",
          "type": "string"
        },
        "port": {
          "description": "MySQL access port.",
          "type": "integer",
          "format": "int64"
        },
        "unix_socket": {
          "description": "MySQL access UNIX socket path.",
          "type": "string"
        }
      }
    },
    "inventoryAddMySQLServiceResponse": {
      "type": "object",
      "properties": {
        "mysql": {
          "$ref": "#/definitions/inventoryMySQLService"
        }
      }
    },
    "inventoryAddMySQLdExporterRequest": {
      "type": "object",
      "properties": {
        "disabled": {
          "description": "Agent desired status: enabled or disabled.",
          "type": "boolean",
          "format": "boolean"
        },
        "password": {
          "description": "MySQL password for extracting metrics.",
          "type": "string"
        },
        "runs_on_node_id": {
          "description": "Node identifier where Agent runs.",
          "type": "string"
        },
        "service_id": {
          "description": "Service identifier for which insights are provided by that Agent.",
          "type": "string"
        },
        "username": {
          "description": "MySQL username for extracting metrics.",
          "type": "string"
        }
      }
    },
    "inventoryAddMySQLdExporterResponse": {
      "type": "object",
      "properties": {
        "mysqld_exporter": {
          "$ref": "#/definitions/inventoryMySQLdExporter"
        }
      }
    },
    "inventoryAddNodeExporterRequest": {
      "type": "object",
      "properties": {
        "disabled": {
          "description": "Agent desired status: enabled or disabled.",
          "type": "boolean",
          "format": "boolean"
        },
        "runs_on_node_id": {
          "description": "Node identifier where Agent runs and for which insights are provided by that Agent.",
          "type": "string"
        }
      }
    },
    "inventoryAddNodeExporterResponse": {
      "type": "object",
      "properties": {
        "node_exporter": {
          "$ref": "#/definitions/inventoryNodeExporter"
        }
      }
    },
    "inventoryAddPMMAgentRequest": {
      "type": "object",
      "properties": {
        "runs_on_node_id": {
          "description": "Node identifier where Agent runs.",
          "type": "string"
        }
      }
    },
    "inventoryAddPMMAgentResponse": {
      "type": "object",
      "properties": {
        "pmm_agent": {
          "$ref": "#/definitions/inventoryPMMAgent"
        }
      }
    },
    "inventoryAddRemoteNodeRequest": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique Node identifier. Will be generated if empty.",
          "type": "string"
        },
        "name": {
          "description": "Unique user-defined Node name.",
          "type": "string"
        }
      }
    },
    "inventoryAddRemoteNodeResponse": {
      "type": "object",
      "properties": {
        "remote": {
          "$ref": "#/definitions/inventoryRemoteNode"
        }
      }
    },
    "inventoryAmazonRDSRemoteNode": {
      "description": "AmazonRDSRemoteNode represents Amazon (AWS) RDS remote Node.",
      "type": "object",
      "properties": {
        "hostname": {
          "description": "Hostname. Unique in combination with region.",
          "type": "string"
        },
        "id": {
          "description": "Unique Node identifier.",
          "type": "string"
        },
        "name": {
          "description": "Unique user-defined Node name.",
          "type": "string"
        },
        "region": {
          "description": "AWS region. Unique in combination with hostname.",
          "type": "string"
        }
      }
    },
    "inventoryChangeAmazonRDSRemoteNodeRequest": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique Node identifier.",
          "type": "string"
        },
        "name": {
          "description": "Unique user-defined Node name.",
          "type": "string"
        }
      }
    },
    "inventoryChangeAmazonRDSRemoteNodeResponse": {
      "type": "object",
      "properties": {
        "amazon_rds_remote": {
          "$ref": "#/definitions/inventoryAmazonRDSRemoteNode"
        }
      }
    },
    "inventoryChangeGenericNodeRequest": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique Node identifier.",
          "type": "string"
        },
        "name": {
          "description": "Unique user-defined Node name.",
          "type": "string"
        }
      }
    },
    "inventoryChangeGenericNodeResponse": {
      "type": "object",
      "properties": {
        "generic": {
          "$ref": "#/definitions/inventoryGenericNode"
        }
      }
    },
    "inventoryChangeMySQLServiceRequest": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique Service identifier.",
          "type": "string"
        },
        "name": {
          "description": "Unique user-defined Service name.",
          "type": "string"
        }
      }
    },
    "inventoryChangeMySQLServiceResponse": {
      "type": "object",
      "properties": {
        "mysql": {
          "$ref": "#/definitions/inventoryMySQLService"
        }
      }
    },
    "inventoryChangeRemoteNodeRequest": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique Node identifier.",
          "type": "string"
        },
        "name": {
          "description": "Unique user-defined Node name.",
          "type": "string"
        }
      }
    },
    "inventoryChangeRemoteNodeResponse": {
      "type": "object",
      "properties": {
        "remote": {
          "$ref": "#/definitions/inventoryRemoteNode"
        }
      }
    },
    "inventoryDisableAgentRequest": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique Agent identifier.",
          "type": "string"
        }
      }
    },
    "inventoryDisableAgentResponse": {
      "type": "object"
    },
    "inventoryEnableAgentRequest": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique Agent identifier.",
          "type": "string"
        }
      }
    },
    "inventoryEnableAgentResponse": {
      "type": "object"
    },
    "inventoryGenericNode": {
      "description": "GenericNode represents Node without more specialized type.",
      "type": "object",
      "properties": {
        "hostname": {
          "description": "Hostname. Is not unique. May be empty.",
          "type": "string"
        },
        "id": {
          "description": "Unique Node identifier.",
          "type": "string"
        },
        "name": {
          "description": "Unique user-defined Node name.",
          "type": "string"
        }
      }
    },
    "inventoryGetAgentRequest": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique Agent identifier.",
          "type": "string"
        }
      }
    },
    "inventoryGetAgentResponse": {
      "type": "object",
      "properties": {
        "mysqld_exporter": {
          "$ref": "#/definitions/inventoryMySQLdExporter"
        },
        "node_exporter": {
          "$ref": "#/definitions/inventoryNodeExporter"
        },
        "pmm_agent": {
          "$ref": "#/definitions/inventoryPMMAgent"
        }
      }
    },
    "inventoryGetNodeRequest": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique Node identifier.",
          "type": "string"
        }
      }
    },
    "inventoryGetNodeResponse": {
      "type": "object",
      "properties": {
        "amazon_rds_remote": {
          "$ref": "#/definitions/inventoryAmazonRDSRemoteNode"
        },
        "generic": {
          "$ref": "#/definitions/inventoryGenericNode"
        },
        "remote": {
          "$ref": "#/definitions/inventoryRemoteNode"
        }
      }
    },
    "inventoryGetServiceRequest": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique Service identifier.",
          "type": "string"
        }
      }
    },
    "inventoryGetServiceResponse": {
      "type": "object",
      "properties": {
        "mysql": {
          "$ref": "#/definitions/inventoryMySQLService"
        }
      }
    },
    "inventoryListAgentsRequest": {
      "type": "object"
    },
    "inventoryListAgentsResponse": {
      "type": "object",
      "properties": {
        "mysqld_exporter": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/inventoryMySQLdExporter"
          }
        },
        "node_exporter": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/inventoryNodeExporter"
          }
        },
        "pmm_agent": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/inventoryPMMAgent"
          }
        }
      }
    },
    "inventoryListNodesRequest": {
      "type": "object"
    },
    "inventoryListNodesResponse": {
      "type": "object",
      "properties": {
        "amazon_rds_remote": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/inventoryAmazonRDSRemoteNode"
          }
        },
        "generic": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/inventoryGenericNode"
          }
        },
        "remote": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/inventoryRemoteNode"
          }
        }
      }
    },
    "inventoryListServicesRequest": {
      "type": "object"
    },
    "inventoryListServicesResponse": {
      "type": "object",
      "properties": {
        "mysql": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/inventoryMySQLService"
          }
        }
      }
    },
    "inventoryMySQLService": {
      "description": "MySQLService represents MySQL-compatible Service configuration.",
      "type": "object",
      "properties": {
        "address": {
          "description": "MySQL access address (DNS name or IP address).",
          "type": "string"
        },
        "id": {
          "description": "Unique Service identifier.",
          "type": "string"
        },
        "name": {
          "description": "Unique user-defined Service name.",
          "type": "string"
        },
        "node_id": {
          "description": "Node identifier where this Service runs.",
          "type": "string"
        },
        "port": {
          "description": "MySQL access port.",
          "type": "integer",
          "format": "int64"
        },
        "unix_socket": {
          "description": "MySQL access UNIX socket path.",
          "type": "string"
        }
      }
    },
    "inventoryMySQLdExporter": {
      "description": "MySQLdExporter represents mysqld_exporter Agent configuration.",
      "type": "object",
      "properties": {
        "disabled": {
          "description": "Agent desired status: enabled or disabled.",
          "type": "boolean",
          "format": "boolean"
        },
        "id": {
          "description": "Unique Agent identifier.",
          "type": "string"
        },
        "listen_port": {
          "description": "HTTP listen port for exposing metrics.",
          "type": "integer",
          "format": "int64"
        },
        "running": {
          "description": "Agent process status: running or not.",
          "type": "boolean",
          "format": "boolean"
        },
        "runs_on_node_id": {
          "description": "Node identifier where Agent runs.",
          "type": "string"
        },
        "service_id": {
          "description": "Service identifier for which insights are provided by that Agent.",
          "type": "string"
        },
        "username": {
          "description": "MySQL username for extracting metrics.",
          "type": "string"
        }
      }
    },
    "inventoryNodeExporter": {
      "description": "NodeExporter represents node_exporter Agent configuration.",
      "type": "object",
      "properties": {
        "disabled": {
          "description": "Agent desired status: enabled or disabled.",
          "type": "boolean",
          "format": "boolean"
        },
        "id": {
          "description": "Unique Agent identifier.",
          "type": "string"
        },
        "listen_port": {
          "description": "HTTP listen port for exposing metrics.",
          "type": "integer",
          "format": "int64"
        },
        "running": {
          "description": "Agent process status: running or not.",
          "type": "boolean",
          "format": "boolean"
        },
        "runs_on_node_id": {
          "description": "Node identifier where Agent runs and for which insights are provided by that Agent.",
          "type": "string"
        }
      }
    },
    "inventoryPMMAgent": {
      "description": "PMMAgent represent pmm-agent Agent configuration.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique Agent identifier.",
          "type": "string"
        },
        "running": {
          "description": "Agent process status: running and connected to pmm-managed, or not.",
          "type": "boolean",
          "format": "boolean"
        },
        "runs_on_node_id": {
          "description": "Node identifier where Agent runs.",
          "type": "string"
        }
      }
    },
    "inventoryRemoteNode": {
      "description": "RemoteNode represents a generic remote Node.\nAgents can't be run on remote Nodes.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique Node identifier.",
          "type": "string"
        },
        "name": {
          "description": "Unique user-defined Node name.",
          "type": "string"
        }
      }
    },
    "inventoryRemoveAgentRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "inventoryRemoveAgentResponse": {
      "type": "object"
    },
    "inventoryRemoveNodeRequest": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique Node identifier.",
          "type": "string"
        }
      }
    },
    "inventoryRemoveNodeResponse": {
      "type": "object"
    },
    "inventoryRemoveServiceRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "inventoryRemoveServiceResponse": {
      "type": "object"
    }
  }
}