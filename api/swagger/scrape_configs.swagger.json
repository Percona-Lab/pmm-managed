{
  "swagger": "2.0",
  "info": {
    "title": "scrape_configs.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v0/scrape-configs": {
      "get": {
        "summary": "List returns all scrape configs.",
        "operationId": "List",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/apiScrapeConfigsListResponse"
            }
          }
        },
        "tags": [
          "ScrapeConfigs"
        ]
      },
      "post": {
        "summary": "Create creates a new scrape config.\nErrors: InvalidArgument(3) if some argument is not valid,\nAlreadyExists(6) if scrape config with that job name is already present,\nFailedPrecondition(9) if reachability check was requested and some scrape target can't be reached.",
        "operationId": "Create",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/apiScrapeConfigsCreateResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiScrapeConfigsCreateRequest"
            }
          }
        ],
        "tags": [
          "ScrapeConfigs"
        ]
      }
    },
    "/v0/scrape-configs/{job_name}": {
      "get": {
        "summary": "Get returns a scrape config by job name.\nErrors: NotFound(5) if no such scrape config is present.",
        "operationId": "Get",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/apiScrapeConfigsGetResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "job_name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ScrapeConfigs"
        ]
      },
      "delete": {
        "summary": "Delete removes existing scrape config by job name.\nErrors: NotFound(5) if no such scrape config is present.",
        "operationId": "Delete",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/apiScrapeConfigsDeleteResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "job_name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ScrapeConfigs"
        ]
      }
    },
    "/v0/scrape-configs/{scrape_config.job_name}": {
      "put": {
        "summary": "Update updates existing scrape config by job name.\nErrors: InvalidArgument(3) if some argument is not valid,\nNotFound(5) if no such scrape config is present,\nFailedPrecondition(9) if reachability check was requested and some scrape target can't be reached.",
        "operationId": "Update",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/apiScrapeConfigsUpdateResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "scrape_config.job_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiScrapeConfigsUpdateRequest"
            }
          }
        ],
        "tags": [
          "ScrapeConfigs"
        ]
      }
    }
  },
  "definitions": {
    "ScrapeTargetHealthHealth": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "DOWN",
        "UP"
      ],
      "default": "UNKNOWN",
      "description": "Target health : unknown, down, or up."
    },
    "apiBasicAuth": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "apiLabelPair": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Label name"
        },
        "value": {
          "type": "string",
          "title": "Label value"
        }
      }
    },
    "apiScrapeConfig": {
      "type": "object",
      "properties": {
        "job_name": {
          "type": "string",
          "title": "The job name assigned to scraped metrics by default: \"example-job\" (required)"
        },
        "scrape_interval": {
          "type": "string",
          "title": "How frequently to scrape targets from this job: \"10s\""
        },
        "scrape_timeout": {
          "type": "string",
          "title": "Per-scrape timeout when scraping this job: \"5s\""
        },
        "metrics_path": {
          "type": "string",
          "title": "The HTTP resource path on which to fetch metrics from targets: \"/metrics\""
        },
        "scheme": {
          "type": "string",
          "title": "Configures the protocol scheme used for requests: \"http\" or \"https\""
        },
        "basic_auth": {
          "$ref": "#/definitions/apiBasicAuth",
          "title": "Sets the `Authorization` header on every scrape request with the configured username and password"
        },
        "tls_config": {
          "$ref": "#/definitions/apiTLSConfig",
          "title": "Configures the scrape request's TLS settings"
        },
        "static_configs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiStaticConfig"
          },
          "title": "List of labeled statically configured targets for this job"
        }
      }
    },
    "apiScrapeConfigsCreateRequest": {
      "type": "object",
      "properties": {
        "scrape_config": {
          "$ref": "#/definitions/apiScrapeConfig"
        },
        "check_reachability": {
          "type": "boolean",
          "format": "boolean",
          "title": "Check that added targets can be scraped from PMM Server"
        }
      }
    },
    "apiScrapeConfigsCreateResponse": {
      "type": "object"
    },
    "apiScrapeConfigsDeleteResponse": {
      "type": "object"
    },
    "apiScrapeConfigsGetResponse": {
      "type": "object",
      "properties": {
        "scrape_config": {
          "$ref": "#/definitions/apiScrapeConfig"
        },
        "scrape_targets_health": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiScrapeTargetHealth"
          },
          "title": "Scrape targets health for this scrape job"
        }
      }
    },
    "apiScrapeConfigsListResponse": {
      "type": "object",
      "properties": {
        "scrape_configs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiScrapeConfig"
          }
        },
        "scrape_targets_health": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiScrapeTargetHealth"
          },
          "title": "Scrape targets health for all managed scrape jobs"
        }
      }
    },
    "apiScrapeConfigsUpdateRequest": {
      "type": "object",
      "properties": {
        "scrape_config": {
          "$ref": "#/definitions/apiScrapeConfig"
        },
        "check_reachability": {
          "type": "boolean",
          "format": "boolean",
          "title": "Check that added targets can be scraped from PMM Server"
        }
      }
    },
    "apiScrapeConfigsUpdateResponse": {
      "type": "object"
    },
    "apiScrapeTargetHealth": {
      "type": "object",
      "properties": {
        "job_name": {
          "type": "string",
          "title": "Original scrape job name"
        },
        "job": {
          "type": "string",
          "title": "\"job\" label value, may be different from job_name due to relabeling"
        },
        "target": {
          "type": "string",
          "title": "Original target"
        },
        "instance": {
          "type": "string",
          "title": "\"instance\" label value, may be different from target due to relabeling"
        },
        "health": {
          "$ref": "#/definitions/ScrapeTargetHealthHealth"
        }
      },
      "description": "ScrapeTargetHealth represents Prometheus scrape target health: unknown, down, or up."
    },
    "apiStaticConfig": {
      "type": "object",
      "properties": {
        "targets": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Hostnames or IPs followed by an optional port number: \"1.2.3.4:9090\""
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiLabelPair"
          },
          "title": "Labels assigned to all metrics scraped from the targets"
        }
      }
    },
    "apiTLSConfig": {
      "type": "object",
      "properties": {
        "insecure_skip_verify": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    }
  }
}
